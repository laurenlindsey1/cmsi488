Program   = Dec* Exp
Dec       = func id "(" ListOf<id, ","> ")" NonemptyListOf<Exp, ";"> finish
Exp       =  Exp1 "?" Exp1 ":" Exp --ternary
          |id "(" ListOf<id, ","> ")" --function
          | "(" Exp ")" --paren
          | Exp1
          | numlit
          | strlit
          | id
Exp1      = Exp1 ("+" | "-") Exp2 --addop
          | Exp2
Exp2      = Exp2 ("*" | "/") Exp3 --mulop
          | Exp3
Exp3      = "-" Exp4 --negate
          | Exp4
Exp4      = numlit "!" --factorial
          | numlit
numlit    = digit+ ("."digit+)? (("E" | "e")("+" | "-") digit+)?
strlit    = "\"" (legalchar)* "\""
legalchar =  "\'" | "\\" | "\"" | "\\n"
          | "\\u{" hex hex? hex? hex? hex? hex? "}"
          | ~"\\" any
hex       = "0"|"1"|"2"|"3"|"4"|"5"|"6"|"7"|"8"|"9"| "A"| "B"| "C"| "D"| "E"
id        = ~func ~finish (letter | "$") (alnum | "$" | "_")*
func      = "func" --idrest
finish    = "end" --idrest
comment   = "--" (~"\n" any)* "\n"
